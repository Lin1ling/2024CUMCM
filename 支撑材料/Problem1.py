import math

def calculate_size(E, Z, p):
    """
    计算单侧检验所需的样本量 n
    
    参数:
    E -- 允许误差 
    Z -- 单侧置信度对应的 Z 值 (如 1.645 对应 95% 单侧置信度)
    p -- 标称值 
    
    返回:
    所需的样本量 n (向上取整)
    """
    n = (pow(Z,2) * p * (1 - p)) / pow(E,2)
    return math.ceil(n)  # 取整


E1 = 0.005  # 考虑到四舍五入,允许的误差为0.5%,最后的次品率设定在9.5%~10.5%（根据单侧区间进行修改）
E2 = 0.01   #最后的次品率在9%~11%（根据单侧区间修改）
E3 = 0.05    #最后的次品率在5%~15%（根据单侧区间修改）
Z1 = 1.645  # 对应95%单侧置信度的Z值(上侧单侧区间，右尾检验)
Z2 = 1.28  # 对应90%单侧置信度的Z值（下侧单侧区间，左尾检验）
p = 0.1  # 给出的标称值为10%

# 计算样本量
size1 = calculate_size(E1, Z1, p)
size2 = calculate_size(E1,Z2,p)
print(f"此时允许误差E为: {E1}")
print(f"95%信度下认定零配件次品率超过标称值则拒收，所需的样本量: {size1}")
print(f"此时样本区间为[10%,10.5%]")
print(f"90%信度下认定零配件次品率不超过标称值则接受，所需样本量:{size2}")
print(f"此时样本区间为[9.5%,10%]")
print("\n")

size1 = calculate_size(E2, Z1, p)
size2 = calculate_size(E2,Z2,p)
print(f"此时允许误差E为: {E2}")
print(f"95%信度下认定零配件次品率超过标称值则拒收，所需的样本量: {size1}")
print(f"此时样本区间为[10%,11%]")
print(f"90%信度下认定零配件次品率不超过标称值则接受，所需样本量:{size2}")
print(f"此时样本区间为[9%,10%]")
print("\n")

size1 = calculate_size(E3, Z1, p)
size2 = calculate_size(E3,Z2,p)
print(f"此时允许误差E为: {E3}")
print(f"95%信度下认定零配件次品率超过标称值则拒收，所需的样本量: {size1}")
print(f"此时样本区间为[10%,15%]")
print(f"90%信度下认定零配件次品率不超过标称值则接受，所需样本量:{size2}")
print(f"此时样本区间为[5%,10%]")

